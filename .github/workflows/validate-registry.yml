name: Validate Registry

on:
  pull_request:
    paths:
      - 'registry/**/*.json'
  pull_request_target:
    paths:
      - 'registry/**/*.json'

jobs:
  security-check:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
      contents: read
    outputs:
      safe: ${{ steps.check.outputs.safe }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          
      - name: Check for non-registry changes
        id: check
        uses: actions/github-script@v7
        with:
          script: |
            const { data: files } = await github.rest.pulls.listFiles({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            });
            
            const hasNonRegistryChanges = files.some(file => !file.filename.startsWith('registry/'));
            const isTrusted = context.payload.pull_request.author_association === 'OWNER' || 
                            context.payload.pull_request.author_association === 'MEMBER' ||
                            context.payload.pull_request.author_association === 'COLLABORATOR';
            
            // 如果有非 registry 目录的改动，且不是可信用户，则需要 approval
            const needsApproval = hasNonRegistryChanges && !isTrusted;
            
            if (needsApproval) {
              console.log('发现非 registry 目录的改动，需要审核');
              const reviews = await github.rest.pulls.listReviews({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: context.issue.number
              });
              
              const hasApproval = reviews.data.some(review => 
                review.state === 'APPROVED' && 
                ['OWNER', 'MEMBER', 'COLLABORATOR'].includes(review.author_association)
              );
              
              core.setOutput('safe', hasApproval ? 'true' : 'false');
              if (!hasApproval) {
                core.notice('此 PR 包含非 registry 目录的改动，需要管理员审核后才能执行验证。');
              }
            } else {
              core.setOutput('safe', 'true');
            }

  validate:
    needs: security-check
    if: needs.security-check.outputs.safe == 'true'
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      checks: write
      statuses: write
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests
          
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v41
        with:
          files: |
            registry/**/*.json
      
      - name: Create initial check
        id: create-check
        uses: actions/github-script@v7
        with:
          script: |
            const check = await github.rest.checks.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: 'Registry Validation',
              head_sha: context.payload.pull_request.head.sha,
              status: 'in_progress',
              output: {
                title: '🔄 Registry 验证进行中',
                summary: '正在验证 Registry 文件...'
              }
            });
            return check.data.id;
      
      - name: Add pending label
        uses: actions/github-script@v7
        with:
          script: |
            await octokit.rest.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ['Plugin']
            });
            
      - name: Validate PyPI packages
        id: validate
        run: python .github/scripts/validate_pypi.py
        env:
          CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Process validation results
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const validateResult = process.env.VALIDATE_EXIT_CODE === '0';
            
            // 更新检查结果
            const title = validateResult ? '✅ Registry 验证通过' : '❌ Registry 验证失败';
            const summary = validateResult 
              ? '所有检查项目均已通过，可以继续合并。' 
              : '发现问题，请查看评论了解详情。';
            
            await github.rest.checks.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              check_run_id: Number(process.env.CHECK_RUN_ID),
              status: 'completed',
              conclusion: validateResult ? 'success' : 'failure',
              output: {
                title: title,
                summary: summary
              }
            });
        env:
          VALIDATE_EXIT_CODE: ${{ steps.validate.outcome == 'success' && '0' || '1' }}
          CHECK_RUN_ID: ${{ steps.create-check.outputs.result }} 